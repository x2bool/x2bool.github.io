{"version":3,"file":"component---src-pages-404-js-265f948c32d74d8e7cef.js","mappings":"uJAmCA,IAhCe,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAkBJ,OAVEA,EANEF,EAMO,KAGP,gBAAC,EAAAG,KAAI,CAACC,UAAU,mBAAmBC,GAAG,KAAI,gBAQ5C,uBAAKD,UAAU,iBAAiB,oBAAmBJ,GAChDE,GAAU,0BAAQE,UAAU,iBAAiBF,GAC9C,4BAAOH,GACP,8BAAQ,MACH,IAAIO,MAAOC,cAAc,wBAE1B,C,+CCsBV,IA3CY,IAAsD,IAAD,UAApD,YAAEC,EAAW,MAAEV,EAAK,SAAEC,EAAQ,cAAEU,GAAe,EAC1D,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,cAiB1BC,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBf,MAElCiB,EAAUN,GAAoBC,EAAKG,aAAaG,QAAO,OAAOP,EAAa,IAEjF,OACE,gCACE,6BAAQK,EAAkBhB,EAAK,MAAMgB,EAAiBhB,GACtD,wBAAMmB,KAAK,cAAcC,QAASN,IAClC,wBAAMO,SAAS,WAAWD,QAASpB,IACnC,wBAAMqB,SAAS,iBAAiBD,QAASN,IACzC,wBAAMO,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAR,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBO,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASpB,IACpC,wBAAMmB,KAAK,sBAAsBC,QAASN,IACzCG,GAAW,wBAAMI,SAAS,WAAWD,QAASH,IAC9ChB,EACA,C,kGC3CP,MAWauB,EAAO,IAAM,gBAAC,IAAG,CAACxB,MAAM,mBAErC,UAbqB,IAAyB,IAAxB,KAAEyB,EAAI,SAAE1B,GAAU,EACtC,MAAM2B,EAAYD,EAAKb,KAAKG,aAAaf,MAEzC,OACE,gBAAC,IAAM,CAACD,SAAUA,EAAUC,MAAO0B,GACjC,0BAAI,kBACJ,yBAAG,2DACI,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    // header = (\n    //   <h1 className=\"main-heading\">\n    //     <Link to=\"/\">{title}</Link>\n    //   </h1>\n    // )\n    header = null\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        &#8592; Front page\n        {/*{title}*/}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      {header && <header className=\"global-header\">{header}</header>}\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Sergei Khabibullin\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children, featuredImage }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            siteUrl\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  const ogImage = featuredImage && `${site.siteMetadata.siteUrl}/og/${featuredImage};`\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {ogImage && <meta property=\"og:image\" content={ogImage} /> }\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["location","title","children","isRootPath","pathname","header","Link","className","to","Date","getFullYear","description","featuredImage","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","ogImage","siteUrl","name","content","property","social","twitter","Head","data","siteTitle"],"sourceRoot":""}